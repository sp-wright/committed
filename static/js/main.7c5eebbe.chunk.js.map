{"version":3,"sources":["images/main-img.svg","images/bg-waves.svg","images/bg-waves2.svg","components/Header.jsx","components/Search.jsx","components/RepoItem.jsx","components/RepoList.jsx","components/SearchResults.jsx","components/App.js","index.js"],"names":["module","exports","Header","className","activeClass","to","spy","smooth","offset","duration","src","mainImg","alt","Search","userData","handleGotData","useState","searchText","setSearchText","searching","setSearching","loading","setLoading","emptyResults","setEmptyResults","searchSubmit","e","a","preventDefault","allRepos","axios","get","userInfo","i","userRepos","data","length","console","log","getData","bgWaves","onSubmit","style","border","onChange","target","value","type","name","autoComplete","placeholder","RepoItem","repoData","created_at","description","html_url","language","updated_at","formatDate","date","year","slice","month","day","href","replace","RepoList","sortedRepos","sort","b","map","repo","key","id","SearchResults","avatar_url","bio","location","login","public_repos","blog","formatURL","url","bgImg2","App","setUserData","gotData","setGotData","ReactDOM","render","document","getElementById"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,4KCqB5BC,EAjBA,WACb,OACE,gCACE,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,cAAd,aACA,wBAAIA,UAAU,YAAd,6CACA,kBAAC,OAAD,CAAMC,YAAY,SAASC,GAAG,mBAAmBC,KAAK,EAAMC,QAAQ,EAAMC,OAAQ,EAAGC,SAAU,GAC7F,4BAAQN,UAAU,YAAlB,mBAGJ,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,WAAWO,IAAKC,IAASC,IAAI,qB,kECyErCC,EAnFA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,OAEZF,oBAAS,GAFG,mBAEvCG,EAFuC,KAE5BC,EAF4B,OAGhBJ,oBAAS,GAHO,mBAGvCK,EAHuC,KAG9BC,EAH8B,OAINN,oBAAS,GAJH,mBAIvCO,EAJuC,KAIzBC,EAJyB,KAMxCC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBZ,GAAc,GACdK,GAAa,GACbE,GAAW,GACXE,GAAgB,GAChBE,EAAEE,iBALiB,+BAAAD,EAAA,MAMH,kCAAAA,EAAA,6DACVE,EAAW,GADD,kBAGWC,IAAMC,IAAN,uCAA0Cd,IAHrD,OAGNe,EAHM,OAIHC,EAAI,EAJD,YAIIA,EAAI,KAJR,iCAKcH,IAAMC,IAAN,uCAA0Cd,EAA1C,uBAAmEgB,EAAnE,kBALd,UAKJC,EALI,OAMVL,EAAQ,sBAAOA,GAAP,YAAoBK,EAAUC,SAClCD,EAAUC,KAAKC,OAAS,KAPlB,qDAIaH,IAJb,uBAWZnB,EAAS,CAACkB,EAASG,KAAMN,IACzBP,GAAW,GAZC,kDAcZe,QAAQC,IAAR,MACAlB,GAAa,GACbI,GAAgB,GAhBJ,0DANG,oDAyBnBe,GACArB,EAAc,IA1BK,2CAAH,sDAiClB,OACE,6BAASf,UAAU,oBACjB,yBAAKA,UAAU,WAAWO,IAAK8B,IAAS5B,IAAI,KAC5C,yBAAKT,UAAU,yBACb,0CACa,2CADb,eAGA,4IACA,sDACA,4BACE,gEACA,+CACA,+CAGJ,yBAAKA,UAAU,0BACb,0BAAMsC,SAAUhB,GACd,2BACEiB,MAAOnB,EAtBC,CAChBoB,OAAQ,iBAqBkC,KAClCC,SAAU,SAAClB,GAAD,OAAOR,EAAcQ,EAAEmB,OAAOC,QACxCA,MAAO7B,EACP8B,KAAK,OACLC,KAAK,eACLC,aAAa,MACbC,YAAa3B,EAAY,sCAA2C,+BAEtE,4BAAQwB,KAAK,UAAb,YAGH5B,GACC,yBAAKhB,UAAU,qBACZkB,EACC,uBAAGlB,UAAU,wCAEb,kBAAC,OAAD,CAAMC,YAAY,SAASC,GAAG,iCAAiCC,KAAK,EAAMC,QAAQ,EAAMC,OAAQ,EAAGC,SAAU,GAC3G,uBAAGN,UAAU,gD,iBCrCZgD,EAxCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAkED,EAAlEC,WAAYC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,SAAUC,EAA+BJ,EAA/BI,SAAUR,EAAqBI,EAArBJ,KAAMS,EAAeL,EAAfK,WAErDC,EAAa,SAACC,GAClB,IAAMC,EAAOD,EAAKE,MAAM,EAAG,GACrBC,EAAQH,EAAKE,MAAM,EAAG,GACtBE,EAAMJ,EAAKE,MAAM,EAAG,IAC1B,MAAM,GAAN,OAAUE,EAAV,YAAiBD,EAAjB,YAA0BF,IAO5B,OACE,6BAASzD,UAAU,mBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBACb,4BAAK6C,IAEP,wCACY,8BAAOQ,IAEnB,4CACgB,8BAAOE,EAAWL,KAElC,6CACiB,8BAAOK,EAAWD,KAElB,OAAhBH,GACC,2CACe,8BAAOA,IAGxB,uBAAGU,KAAMT,GAAqBA,EAvBvBU,QAAQ,WAAY,QCIpBC,EAdE,SAAC,GAAmB,IAC7BC,EAD4B,EAAhBjC,UACYkC,MAAK,SAACzC,EAAG0C,GAAJ,OAAW1C,EAAE0B,WAAagB,EAAEhB,YAAc,EAAI,KACjF,OACE,yBAAKlD,UAAU,uBACb,wBAAIA,UAAU,mBAAd,uBACA,yBAAKA,UAAU,aACZgE,EAAYG,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CAAUnB,SAAUmB,EAAMC,IAAKD,EAAKE,GAAIA,GAAIF,EAAKE,WCuE5CC,EA7EO,SAAC,GAAkB,IAAhB5D,EAAe,EAAfA,SAAe,EACmEA,EAAS,GAA1G6D,EAD8B,EAC9BA,WAAYpB,EADkB,EAClBA,SAAUqB,EADQ,EACRA,IAAKvB,EADG,EACHA,WAAYI,EADT,EACSA,WAAYoB,EADrB,EACqBA,SAAU7B,EAD/B,EAC+BA,KAAM8B,EADrC,EACqCA,MAAOC,EAD5C,EAC4CA,aAAcC,EAD1D,EAC0DA,KAE1FtB,EAAa,SAACC,GAClB,IAAMC,EAAOD,EAAKE,MAAM,EAAG,GACrBC,EAAQH,EAAKE,MAAM,EAAG,GACtBE,EAAMJ,EAAKE,MAAM,EAAG,IAC1B,MAAM,GAAN,OAAUE,EAAV,YAAiBD,EAAjB,YAA0BF,IAGtBqB,EAAY,SAACC,GACjB,OAAOA,EAAIjB,QAAQ,WAAY,KAGjC,OACE,6BAAS9D,UAAU,kCACjB,yBAAKA,UAAU,aAAaO,IAAKyE,IAAQvE,IAAI,KAC7C,yBAAKT,UAAU,4BACb,wBAAIA,UAAU,wBAAd,gBACA,yBAAKA,UAAU,uBACb,6BACE,oCAEF,6BACE,2BAAI6C,IAEN,6BACE,qCAEF,6BACE,2BAAI8B,IAEN,6BACE,wCAEF,6BACE,2BAAID,IAEN,0CACA,6BACE,2BAAID,IAEN,6BACE,0CAEF,6BACE,2BAAIlB,EAAWL,KAEjB,6BACE,2CAEF,6BACE,2BAAIK,EAAWD,KAEjB,6BACE,mDAEF,6BACE,2BAAIsB,IAEN,6BACE,oCAEF,6BACE,uBAAGf,KAAMgB,GAAOC,EAAUD,MAG9B,yBAAK7E,UAAU,0BACb,yBAAKO,IAAKiE,EAAY/D,IAAKoC,IAC3B,uBAAGgB,KAAMT,GAAW0B,EAAU1B,MAGlC,kBAAC,EAAD,CAAUrB,UAAWpB,EAAS,OChDrBsE,MAvBf,WAAgB,IAAD,EACmBpE,mBAAS,IAD5B,mBACNF,EADM,KACIuE,EADJ,OAEiBrE,oBAAS,GAF1B,mBAENsE,EAFM,KAEGC,EAFH,KAQb,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEzE,SAAU,SAACY,GACT2D,EAAY3D,GACZ6D,GAAW,IAEbxE,cAAe,SAACkB,GAAD,OAZC,SAACA,GACrBsD,EAAWtD,GAWelB,CAAckB,MAErCqD,GAAW,kBAAC,EAAD,CAAexE,SAAUA,MClB3C0E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7c5eebbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-img.d53cb2b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-waves.c1d24a1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-waves2.c1d24a1c.svg\";","import React from 'react';\nimport { Link } from 'react-scroll';\nimport mainImg from '../images/main-img.svg';\n\nconst Header = () => {\n  return (\n    <header>\n      <div className='title-container'>\n        <h1 className='main-title'>Committed</h1>\n        <h3 className='subtitle'>a place for recruiters to find new talent</h3>\n        <Link activeClass='active' to='search-container' spy={true} smooth={true} offset={0} duration={0}>\n          <button className='main-btn'>Search Talent</button>\n        </Link>\n      </div>\n      <div className='main-img-container'>\n        <img className='main-img' src={mainImg} alt='person-coding' />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-scroll';\nimport bgWaves from '../images/bg-waves.svg';\n\nconst Search = ({ userData, handleGotData }) => {\n  const [searchText, setSearchText] = useState('');\n  const [searching, setSearching] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [emptyResults, setEmptyResults] = useState(false);\n\n  const searchSubmit = async (e) => {\n    handleGotData(false);\n    setSearching(true);\n    setLoading(true);\n    setEmptyResults(false);\n    e.preventDefault();\n    const getData = async () => {\n      let allRepos = [];\n      try {\n        const userInfo = await axios.get(`https://api.github.com/users/${searchText}`);\n        for (let i = 1; i < 100; i++) {\n          const userRepos = await axios.get(`https://api.github.com/users/${searchText}/repos?page=${i}&per_page=100`);\n          allRepos = [...allRepos, ...userRepos.data];\n          if (userRepos.data.length < 100) {\n            break;\n          }\n        }\n        userData([userInfo.data, allRepos]);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n        setSearching(false);\n        setEmptyResults(true);\n      }\n    };\n    getData();\n    setSearchText('');\n  };\n\n  const noResults = {\n    border: '2px solid red',\n  };\n\n  return (\n    <section className='search-container'>\n      <img className='bg-waves' src={bgWaves} alt='' />\n      <div className='search-text-container'>\n        <h2>\n          Search for <span>Committed</span> developers\n        </h2>\n        <p>search a developer's github username to get all the useful information you need to make recruitment decisions</p>\n        <p>get information like...</p>\n        <ul>\n          <li>links to all public repositories</li>\n          <li>recent activity</li>\n          <li>profile image</li>\n        </ul>\n      </div>\n      <div className='search-input-container'>\n        <form onSubmit={searchSubmit}>\n          <input\n            style={emptyResults ? noResults : null}\n            onChange={(e) => setSearchText(e.target.value)}\n            value={searchText}\n            type='text'\n            name='search-field'\n            autoComplete='off'\n            placeholder={emptyResults ? `Oops, we couldn't find that user...` : 'Enter a GitHub username...'}\n          />\n          <button type='submit'>Search</button>\n        </form>\n      </div>\n      {searching && (\n        <div className='spinner-container'>\n          {loading ? (\n            <i className='fas fa-asterisk fa-2x rotate-center'></i>\n          ) : (\n            <Link activeClass='active' to='search-results-outer-container' spy={true} smooth={true} offset={0} duration={0}>\n              <i className='fas jello-horizontal fa-5x fa-sort-down'></i>\n            </Link>\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nconst RepoItem = ({ repoData }) => {\n  const { created_at, description, html_url, language, name, updated_at } = repoData;\n\n  const formatDate = (date) => {\n    const year = date.slice(0, 4);\n    const month = date.slice(5, 7);\n    const day = date.slice(8, 10);\n    return `${day}/${month}/${year}`;\n  };\n\n  const formatURL = (url) => {\n    return url.replace('https://', '');\n  };\n\n  return (\n    <section className='repo-item-outer'>\n      <div className='repo-item'>\n        <div className='repo-item-title'>\n          <h1>{name}</h1>\n        </div>\n        <p>\n          language: <span>{language}</span>\n        </p>\n        <p>\n          date created: <span>{formatDate(created_at)}</span>\n        </p>\n        <p>\n          date modified: <span>{formatDate(updated_at)}</span>\n        </p>\n        {description !== null && (\n          <p>\n            description: <span>{description}</span>\n          </p>\n        )}\n        <a href={html_url}>{formatURL(html_url)}</a>\n      </div>\n    </section>\n  );\n};\n\nexport default RepoItem;\n","import React from 'react';\nimport RepoItem from './RepoItem';\n\nconst RepoList = ({ userRepos }) => {\n  const sortedRepos = userRepos.sort((a, b) => (a.created_at > b.created_at ? -1 : 1));\n  return (\n    <div className='repo-list-container'>\n      <h1 className='repo-list-title'>Public Repositories</h1>\n      <div className='repo-list'>\n        {sortedRepos.map((repo) => (\n          <RepoItem repoData={repo} key={repo.id} id={repo.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RepoList;\n","import React from 'react';\nimport bgImg2 from '../images/bg-waves2.svg';\nimport RepoList from './RepoList';\n\nconst SearchResults = ({ userData }) => {\n  const { avatar_url, html_url, bio, created_at, updated_at, location, name, login, public_repos, blog } = userData[0];\n\n  const formatDate = (date) => {\n    const year = date.slice(0, 4);\n    const month = date.slice(5, 7);\n    const day = date.slice(8, 10);\n    return `${day}/${month}/${year}`;\n  };\n\n  const formatURL = (url) => {\n    return url.replace('https://', '');\n  };\n\n  return (\n    <section className='search-results-outer-container'>\n      <img className='bg-waves-2' src={bgImg2} alt='' />\n      <div className='search-results-container'>\n        <h1 className='search-results-title'>User Details</h1>\n        <div className='search-results-text'>\n          <div>\n            <p>name</p>\n          </div>\n          <div>\n            <p>{name}</p>\n          </div>\n          <div>\n            <p>login</p>\n          </div>\n          <div>\n            <p>{login}</p>\n          </div>\n          <div>\n            <p>location</p>\n          </div>\n          <div>\n            <p>{location}</p>\n          </div>\n          <div>biography</div>\n          <div>\n            <p>{bio}</p>\n          </div>\n          <div>\n            <p>user since</p>\n          </div>\n          <div>\n            <p>{formatDate(created_at)}</p>\n          </div>\n          <div>\n            <p>last active</p>\n          </div>\n          <div>\n            <p>{formatDate(updated_at)}</p>\n          </div>\n          <div>\n            <p>public repositories</p>\n          </div>\n          <div>\n            <p>{public_repos}</p>\n          </div>\n          <div>\n            <p>link</p>\n          </div>\n          <div>\n            <a href={blog}>{formatURL(blog)}</a>\n          </div>\n        </div>\n        <div className='search-image-container'>\n          <img src={avatar_url} alt={name} />\n          <a href={html_url}>{formatURL(html_url)}</a>\n        </div>\n      </div>\n      <RepoList userRepos={userData[1]} />\n    </section>\n  );\n};\n\nexport default SearchResults;\n","import React, { useState } from 'react';\nimport Header from './Header';\nimport Search from './Search';\nimport SearchResults from './SearchResults';\n\nfunction App() {\n  const [userData, setUserData] = useState([]);\n  const [gotData, setGotData] = useState(false);\n\n  const handleGotData = (i) => {\n    setGotData(i);\n  };\n\n  return (\n    <div>\n      <Header />\n      <Search\n        userData={(e) => {\n          setUserData(e);\n          setGotData(true);\n        }}\n        handleGotData={(i) => handleGotData(i)}\n      />\n      {gotData && <SearchResults userData={userData} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}